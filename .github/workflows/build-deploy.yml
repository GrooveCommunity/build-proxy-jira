name: Build and Deploy Image

on:
  push:
    branches:
    - '**'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_REGION: us-central1
  GKE_CLUSTER: noc
  IMAGE: proxy-jira
  APP_PORT: 9275
  NODE_PORT: 32978
  MAIN_REPO_NAME: proxy-jira

jobs:
  build_and_deploy_docker:
    name: Build and Deploy Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Configure Docker 
      run: |-
        gcloud --quiet auth configure-docker
  
    - name: Build Docker Image
      run: |-
        docker build --build-arg APP_PORT=${{ env.APP_PORT }} --build-arg MAIN_REPO_NAME=${{ env.MAIN_REPO_NAME }} --tag "gcr.io/$PROJECT_ID/$IMAGE:1.0.0.${{ steps.vars.outputs.sha_short }}" .
    
    - name: Deploys Docker Image
      run: |
        docker push "gcr.io/$PROJECT_ID/$IMAGE:1.0.0.${{ steps.vars.outputs.sha_short }}"
    
  deploy_k8s:
    name: Deploy Pod and Service
    runs-on: ubuntu-latest
    needs: build_and_deploy_docker

    steps:
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
        
    - name: Get The GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --region us-central1

    - name: Replace image tag and APP PORT
      run: |-
        sed -i 's/APP_PORT/${{ env.APP_PORT }}/g' deployment.yml
        sed -i 's/TAG_IMAGE/1.0.0.${{ steps.vars.outputs.sha_short }}/g' deployment.yml
    
    - name: Create deployment 
      run: |-
        kubectl apply -f deployment.yml -n paygo 

    - name: Replace APP PORT
      run: |-
        sed -i 's/APP_PORT/${{ env.APP_PORT }}/g' service.yml
        sed -i 's/NODE_PORT/${{ env.NODE_PORT }}/g' service.yml

    - name: Fazendo deploy do servi√ßo
      run: |-
        kubectl apply -f service.yml -n paygo

    - name: Fazendo deploy do gateway
      run: |-
        kubectl apply -f gateway.yml -n paygo 

    - name: Replace APP PORT
      run: |-
        sed -i 's/APP_PORT/${{ env.APP_PORT }}/g' virtual-service.yml

    - name: Fazendo deploy do Virtual Service
      run: |-
        kubectl apply -f virtual-service.yml -n paygo 